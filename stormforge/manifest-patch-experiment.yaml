apiVersion: redskyops.dev/v1beta1
kind: Experiment
metadata:
  labels:
    redskyops.dev/application: tvk-backup
  name: tvk-backup
  namespace: default
spec:
  metrics:
  - minimize: true
    name: cost
    port: 9090
    query: ({{ cpuRequests . "app.kubernetes.io/part-of=k8s-triliovault" }} * 1) + ({{ memoryRequests . "app.kubernetes.io/part-of=k8s-triliovault" | GB }} * 1)
    type: prometheus
  - minimize: true
    name: cost-cpu-requests
    optimize: false
    port: 9090
    query: '{{ cpuRequests . "app.kubernetes.io/part-of=k8s-triliovault" }}'
    type: prometheus
  - minimize: true
    name: cost-memory-requests
    optimize: false
    port: 9090
    query: '{{ memoryRequests . "app.kubernetes.io/part-of=k8s-triliovault" | GB }}'
    type: prometheus
  - minimize: true
    name: duration
    port: 0
    query: '{{ duration .StartTime .CompletionTime }}'
  parameters:
  - min: 512
    max: 1024
    name: deploymentMemory
    baseline: 512
  - min: 250
    max: 1000
    baseline: 250
    name: deploymentCpu
  - min: 500
    max: 2000
    baseline: 500
    name: metaCpu
  - min: 512
    max: 1024
    baseline: 512
    name: metaMemory
  - min: 1536
    max: 4092
    baseline: 1536
    name: dataMemory  
  - min: 1200
    max: 4000
    baseline: 1200
    name: dataCpu     
  trialTemplate:
    metadata:
      labels:
        redskyops.dev/application: tvk-backup
    spec:
      readinessGates:
      - kind: Deployment
        apiVersion: apps/v1
        name: k8s-triliovault-admission-webhook
        conditionTypes:
        - redskyops.dev/app-ready
        InitialDelaySeconds: 5
        periodSeconds: 5
        failureThreshold: 30
      setupServiceAccountName: redsky-setup
      setupTasks:
      - args:
        - prometheus
        - $(MODE)
        name: monitoring
      - name: tvk-manager
        image: ghcr.io/thestormforge/setuptools:edge
        command:
        - /bin/sh
        args:
        - -c
        - |
          case ${MODE} in
          create)
            kubectl patch --type=json --patch \
            '[
              {"op": "replace", "path": "/spec/metadataJobLimits/cpu", "value": "'${METACPU}'m"  },
              {"op": "replace", "path": "/spec/metadataJobLimits/memory", "value": "'${METAMEMORY}'Mi" },
              {"op": "replace", "path": "/spec/dataJobLimits/cpu", "value": "'${DATACPU}'m"  },
              {"op": "replace", "path": "/spec/dataJobLimits/memory", "value": "'${DATAMEMORY}'Mi"  },
              {"op": "replace", "path": "/spec/deploymentLimits/cpu", "value": "'${DEPLOYMENTCPU}'m"  },
              {"op": "replace", "path": "/spec/deploymentLimits/memory", "value": "'${DEPLOYMENTMEMORY}'Mi" }
            ]' \
            -o yaml \
            --dry-run=true \
            -f /tmp/tvkmanager/tvk-manager.yaml > /tmp/patched-tvk-manager.yaml
            kubectl apply -f /tmp/patched-tvk-manager.yaml
          ;;
          delete)
          ;;
          esac
        volumeMounts:
        - name: tvkmanager
          mountPath: /tmp/tvkmanager
      setupVolumes:
      - name: tvkmanager
        configMap:
          name: tvkmanager
      jobTemplate:
        spec:
          template:
            spec:            
              serviceAccount: redsky-setup
              activeDeadlineSeconds: 1800
              containers:
              - image: bitnami/kubectl:latest
                name: kubectl
                command: ["/bashscript/bash-script.sh"]
                ports:
                - name: kubectl
                  containerPort: 2368
                  protocol: TCP
                volumeMounts:
                  - name: bashscript
                    mountPath: /bashscript
                  - name: backup
                    mountPath: /backup
              volumes:
                - name: bashscript
                  configMap:
                    name: bashscript
                    defaultMode: 0755
                - name: backup
                  configMap:
                    name: backup         
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    redskyops.dev/application: tvk-backup
  name: redsky-setup
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: redsky-tvk-backup
rules:
- apiGroups:
  - ""
  resources:
  - configmaps
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - endpoints
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - events
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - namespaces
  verbs:
  - create
  - update
- apiGroups:
  - ""
  resources:
  - persistentvolumeclaims
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - persistentvolumes
  verbs:
  - update
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - secrets
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - services
  verbs:
  - update
  - patch
- apiGroups:
  - ""
  resources:
  - services/finalizers
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - '*'
  resources:
  - '*'
  verbs:
  - get
  - list
  - watch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - mutatingwebhookconfigurations
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - admissionregistration.k8s.io
  resources:
  - validatingwebhookconfigurations
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - apiextensions.k8s.io
  resources:
  - customresourcedefinitions
  verbs:
  - create
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - update
- apiGroups:
  - batch
  resources:
  - cronjobs
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - batch
  resources:
  - cronjobs/status
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - batch
  resources:
  - jobs
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - extensions
  resources:
  - cronjobs
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - extensions
  resources:
  - cronjobs/status
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - extensions
  resources:
  - ingresses
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - extensions
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - extensions
  resources:
  - jobs
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - networking.k8s.io
  resources:
  - ingressclasses
  verbs:
  - create
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses
  verbs:
  - create
  - patch
  - update
- apiGroups:
  - networking.k8s.io
  resources:
  - ingresses/status
  verbs:
  - update
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterrolebindings
  verbs:
  - update
  - patch
  - bind
  - escalate
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  verbs:
  - update
  - patch
  - bind
  - escalate
- apiGroups:
  - snapshot.storage.k8s.io
  resources:
  - '*'
  verbs:
  - create
  - update
  - delete
  - patch
- apiGroups:
  - triliovault.trilio.io
  resources:
  - '*'
  verbs:
  - '*'
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    redskyops.dev/application: tvk-backup
  name: redsky-prometheus
rules:
- apiGroups:
  - rbac.authorization.k8s.io
  resources:
  - clusterroles
  - clusterrolebindings
  verbs:
  - get
  - create
  - delete
- apiGroups:
  - ""
  resources:
  - serviceaccounts
  - services
  - configmaps
  verbs:
  - get
  - create
  - delete
- apiGroups:
  - apps
  resources:
  - deployments
  verbs:
  - get
  - create
  - delete
  - list
  - watch
- apiGroups:
  - ""
  resources:
  - nodes
  - nodes/metrics
  - nodes/proxy
  - services
  verbs:
  - list
  - watch
  - get
- apiGroups:
  - ""
  resources:
  - pods
  verbs:
  - list
  - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redskyops.dev/application: tvk-backup
  name: redsky-setup-prometheus
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redsky-prometheus
subjects:
- kind: ServiceAccount
  name: redsky-setup
  namespace: default
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    redskyops.dev/application: tvk-backup
  name: redsky-setup-task
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: redsky-tvk-backup
subjects:
- kind: ServiceAccount
  name: redsky-setup
  namespace: default
